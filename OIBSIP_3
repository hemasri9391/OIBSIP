import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
public class SimpleATM
{
    public double balance;
    public List<String> transactionHistory;
    public Scanner scanner;
    public String userId;
    public String pin;
    public SimpleATM()
    {
        this.balance = 1000.00;
        this.transactionHistory = new ArrayList<>();
        this.scanner = new Scanner(System.in);
        this.userId = "user1";
        this.pin = "pin123";
    }
    public void start() 
    {
        System.out.println("Welcome to the Simple ATM!");
        if (authenticate()) 
        {
            showMenu();
        } 
        else 
        {
            System.out.println("Invalid login. Exiting...");
        }
    }
    public boolean authenticate() 
    {
        for (int i = 0; i < 3; i++) 
        {
            System.out.print("Enter User ID: ");
            String enteredUserId = scanner.nextLine();
            System.out.print("Enter PIN: ");
            String enteredPin = scanner.nextLine();
            if (userId.equals(enteredUserId) && pin.equals(enteredPin)) 
            {
                return true;
            }
            else
            {
                System.out.println("Invalid credentials. Try again.");
            }
        }
        return false;
    }
    public void showMenu() 
    {
        int choice;
        do 
        {
            System.out.println("\nATM Menu:");
            System.out.println("1. Transaction History");
            System.out.println("2. Withdraw");
            System.out.println("3. Deposit");
            System.out.println("4. Transfer");
            System.out.println("5. Quit");
            System.out.print("Choose an option: ");
            choice = scanner.nextInt();
            scanner.nextLine();
            switch (choice) 
            {
                case 1:
                    showTransactionHistory();
                    break;
                case 2:
                    withdraw();
                    break;
                case 3:
                    deposit();
                    break;
                case 4:
                    transfer();
                    break;
                case 5:
                    System.out.println("Thank you for using the ATM. Goodbye!");
                    break;
                default:
                    System.out.println("Invalid choice. Try again.");
            }
        } 
        while (choice != 5);
    }
    public void showTransactionHistory() 
    {
        System.out.println("\nTransaction History:");
        if (transactionHistory.isEmpty()) 
        {
            System.out.println("No transactions found.");
        } 
        else 
        {
            for (String transaction : transactionHistory)
            {
                System.out.println(transaction);
            }
        }
    }
    public void withdraw() 
    {
        System.out.print("Enter amount to withdraw: ");
        double amount = scanner.nextDouble();
        scanner.nextLine();
        if (amount > 0 && amount <= balance)
        {
            balance -= amount;
            transactionHistory.add("Withdrew: $" + amount);
            System.out.println("Withdrawal successful. New balance: $" + balance);
        } 
        else
        {
            System.out.println("Invalid amount or insufficient funds.");
        }
    }
    public void deposit() 
    {
        System.out.print("Enter amount to deposit: ");
        double amount = scanner.nextDouble();
        scanner.nextLine();
        if (amount > 0) 
        {
            balance += amount;
            transactionHistory.add("Deposited: $" + amount);
            System.out.println("Deposit successful. New balance: $" + balance);
        }
        else
        {
            System.out.println("Invalid deposit amount.");
        }
    }
    public void transfer() 
    {
        System.out.print("Enter recipient user ID: ");
        String recipientId = scanner.nextLine();
        System.out.print("Enter amount to transfer: ");
        double amount = scanner.nextDouble();
        scanner.nextLine();
        if (amount > 0 && amount <= balance)
        {
            balance -= amount;
            transactionHistory.add("Transferred: $" + amount + " to " + recipientId);
            System.out.println("Transfer successful. New balance: $" + balance);
        } 
        else 
        {
            System.out.println("Invalid amount or insufficient funds.");
        }
    }
    public static void main(String[] args) 
    {
        SimpleATM atm = new SimpleATM();
        atm.start();
    }
}
